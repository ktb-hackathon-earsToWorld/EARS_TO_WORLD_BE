name: Java CI with Gradle

on:
  push:
    branches: [ "main", "deploy" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: make application-prod.yml
      run: |
        mkdir -p ./src/main/resources
        touch ./src/main/resources/application-prod.yml
        echo "${{ secrets.APPLICATION_PROD }}" > ./src/main/resources/application-prod.yml
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build -x test

    - name: Docker build
      run: |
        docker login -u ${{ secrets.DOCKER_ID }} -p ${{ secrets.DOCKER_PW }}
        docker build -t app .
        docker tag app ${{ secrets.DOCKER_ID }}/backend:latest
        docker push ${{ secrets.DOCKER_ID }}/backend:latest
    
    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.PRIVATE_KEY }}
        script: |
          cd deploy
          docker pull ${{ secrets.DOCKER_ID }}/backend:latest
          docker compose up -d backend
          docker image prune -a -f
          
    - name: Set Notification Message
      id: set_message
      run: |
        if [ ${{ success() }} ]; then
          echo "content=✅ Build succeeded for '${{ github.repository }}' on branch '${{ github.ref_name }}'!" >> $GITHUB_ENV
        else
          echo "content=❌ Build failed for '${{ github.repository }}' on branch '${{ github.ref_name }}'!" >> $GITHUB_ENV
        
    - name: Notify Discord
      run: |
        curl -X POST -H 'Content-Type: application/json' \
        -d "{\"content\":\"${{ env.content }}\"}" \
        ${{ secrets.DISCORD_WEBHOOK_URL }}